'''
Useful Third-Party Packages

Being able to install and import third party libraries is useful, but to be an effective programmer you also need to know what libraries are available for you to use. People typically learn about useful new libraries from online recommendations or from colleagues. If you're a new Python programmer you may not have many colleagues, so to get you started here's a list of packages that are popular with engineers at Udacity.

    IPython - A better interactive Python interpreter https://ipython.org/
    requests - Provides easy to use methods to make web requests. Useful for accessing web APIs. https://requests.readthedocs.io/en/master/
    Flask - a lightweight framework for making web applications and APIs. https://flask.palletsprojects.com/en/1.1.x/
    Django - A more featureful framework for making web applications. Django is particularly good for designing complex, content heavy, web applications. https://www.djangoproject.com/
    Beautiful Soup - Used to parse HTML and extract information from it. Great for web scraping. https://www.crummy.com/software/BeautifulSoup/
    pytest - extends Python's builtin assertions and unittest module. https://docs.pytest.org/en/latest/
    PyYAML - For reading and writing YAML files. https://pyyaml.org/wiki/PyYAML
    NumPy - The fundamental package for scientific computing with Python. It contains among other things a powerful N-dimensional array object and useful linear algebra capabilities. https://numpy.org/
    pandas - A library containing high-performance, data structures and data analysis tools. In particular, pandas provides dataframes! https://pandas.pydata.org/
    matplotlib - a 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments. https://matplotlib.org/
    ggplot - Another 2D plotting library, based on R's ggplot2 library. http://ggplot.yhathq.com/
    Pillow - The Python Imaging Library adds image processing capabilities to your Python interpreter. https://python-pillow.org/
    pyglet - A cross-platform application framework intended for game development. http://pyglet.org/
    Pygame - A set of Python modules designed for writing games. https://www.pygame.org/news
    pytz - World Timezone Definitions for Python http://pytz.sourceforge.net/


Hierarchy of Online Resources

While there are many online resources about programming, not all of the them are created equal. This list of resources is in approximate order of reliability.

    The Python Tutorial https://docs.python.org/3/tutorial/- This section of the official documentation surveys Python's syntax and standard library. 
    It uses examples, and is written using less technical language than the main documentation. Make sure you're 
    reading the Python 3 version of the docs!
    The Python Language and Library References https://docs.python.org/3/index.html - The Language Reference and Library Reference are more technical 
    than the tutorial, but they are the definitive sources of truth. As you become increasingly acquainted with 
    Python you should use these resources more and more.
    Third-Party Library Documentation - Third-party libraries publish their documentation on their own websites, 
    and often times at https://readthedocs.org/. You can judge the quality of a third-party library by the quality 
    of its documentation. If the developers haven't found time to write good docs, they probably haven't found the 
    time to polish their library either.
    The websites and blogs of prominent experts - The previous resources are primary sources, meaning that they are 
    documentation from the same people who wrote the code being documented. Primary sources are the most reliable. 
    Secondary sources are also extremely valuable. The difficulty with secondary sources is determining the 
    credibility of the source. The websites of authors like Doug Hellmann https://doughellmann.com/blog/ and 
    developers like Eli Bendersky https://eli.thegreenplace.net/ are excellent. The blog of an unknown author 
    might be excellent, or it might be rubbish.
    StackOverflow https://stackoverflow.com/- This question and answer site has a good amount of traffic, so it's likely that someone has 
    asked (and someone has answered) a related question before! However, answers are provided by volunteers and 
    vary in quality. Always understand solutions before putting them into your program. One line answers without 
    any explanation are dubious. This is a good place to find out more about your question or discover alternative 
    search terms.
    Bug Trackers - Sometimes you'll encounter a problem so rare, or so new, that no one has addressed it on 
    StackOverflow. You might find a reference to your error in a bug report on GitHub for instance. These bug 
    reports can be helpful, but you'll probably have to do some original engineering work to solve the problem.
    Random Web Forums - Sometimes your search yields references to forums that haven't been active since 2004, or 
    some similarly ancient time. If these are the only resources that address your problem, you should rethink 
    how you're approaching your solution.



'''